#include <iostream>
#include <locale.h>
#include <cmath>
#include <fstream>
#include "GnuP.h"
using namespace std;

double* SLAU(double** a, double* y, int n) {
	double* x, max;
	int k, index;
	const double eps = 0.00001;
	x = new double[n];
	k = 0;
	while (k < n) {
		max = abs(a[k][k]);
		index = k;
		for (int i = k + 1; i < n; i++)
		if (abs(a[i][k]) > max) {
			max = abs(a[i][k]);
			index = i;
		}
		for (int j = 0; j < n; j++) {
			double temp = a[k][j];
			a[k][j] = a[index][j];
			a[index][j] = temp;
		}
		double temp = y[k];
		y[k] = y[index];
		y[index] = temp;
		for (int i = k; i < n; i++) {
			double temp = a[i][k];
			if (abs(temp) < eps) continue; 
			for (int j = 0; j < n; j++)
			a[i][j] = a[i][j] / temp;
			y[i] = y[i] / temp;
			if (i == k)  continue; 
			for (int j = 0; j < n; j++)
			a[i][j] = a[i][j] - a[k][j];
			y[i] = y[i] - y[k];
		}
		k++;
	}
	for (k = n - 1; k >= 0; k--) {
		x[k] = y[k];
		for (int i = 0; i < k; i++)
		y[i] = y[i] - a[i][k] * x[k];
	}
	return x;
}

int main() {
	setlocale(LC_ALL, "rus");
	double* a, *x, * y, ** A, * b, a1[2], * y2, sum = 0, mid;
	int n = 9, N = 3;
	ifstream f("abc.txt");
	x = new double[n];
	y = new double[n];
	if (f.is_open()) {
		cout << "значения х и у:" << endl;
		for (int i = 0; i < n; i++) {
			f >> x[i];
			f >> y[i];
			cout << "х" << i + 1 << "= " << x[i] << endl;
			cout << "y" << i + 1 << "= " << y[i] << endl;
		}
		f.close();
		A = new double* [N];
		b = new double[N];
		a = new double[N];
		for (int i = 0; i < N; i++)
		A[i] = new double[N];
		A[0][0] = n; A[0][1] = 0; A[0][2] = 0;
		A[1][0] = 0; A[1][1] = 0; A[1][2] = 0;
		A[2][0] = 0; A[2][1] = 0; A[2][2] = 0;
		b[0] = 0; b[1] = 0; b[2] = 0;
		for (int i = 0; i < n; i++) {
			A[0][1] += x[i]; A[0][2] += x[i] * x[i];
			A[1][0] += x[i]; A[1][1] += x[i] * x[i]; A[1][2] += pow(x[i], 3);
			A[2][0] += x[i] * x[i]; A[2][1] += pow(x[i], 3); A[2][2] += pow(x[i], 4);
			b[0] += y[i]; b[1] += y[i] * x[i]; b[2] += y[i] * x[i] * x[i];
		}
		a = SLAU(A, b, N);
		cout << "a:";
		a1[0] = 0; a1[1] = 0;
		double chisl1 = 0, chisl2 = 0, chisl3 = 0, znam1 = 0, znam2 = 0;
		for (int i = 0; i < 2; i++) {
			chisl1 += x[i] * y[i];
			chisl2 += x[i]; chisl3 += y[i];
			znam1 += x[i] * x[i];
			znam2 += x[i];
			if (i == 1) {
				a1[1] = (n * chisl1 - chisl2 * chisl3) / (n * znam1 - znam2 * znam2);
				a1[0] = chisl3 / n - a1[1] * znam2 / n;
			}
		}
		
		for (int i = 0; i < N; i++)cout << a[i] << " ";
		cout << "\nЛиния регрессии: у=" << a1[0] << "+" << a1[1] << "х" << endl;
		
		double r = 0, Mx = 0, My = 0;
		for (int i = 0; i < n; i++) {
			Mx += x[i]; My += y[i];
			if (i == n - 1) {
				Mx /= n;
				My /= n;
			}
		}
		for (int i = 0; i < n; i++) {
			double chisl = 0, znam1 = 0, znam2 = 0;
			chisl += (x[i] - Mx) * (y[i] - My);
			znam1 += (x[i] - Mx) * (x[i] - Mx);
			znam2 += (y[i] - My) * (y[i] - My);
			if (i == n - 1)
			r = chisl / sqrt(znam1 * znam2);
		}
		cout << "Коэффициент корреляции: r=" << r << endl;
		
		y2 = new double[n];
		for (int i = 0; i < n; i++)
		y2[i] = a1[0] + a1[1] * x[i];
		
		for (int i = 0; i < n; i++)
		sum += (y[i] - y2[i]) * (y[i] - y2[i]);
		mid = sum / n;
		cout << "Суммарная квадратичная ошибка для линии регрессии и подобранной функции: " << sum << endl;
		cout << "Средняя ошибка для линии регрессии и подобранной функции: " << mid << endl;
		
		GnuP p;
		
		p.plotArray(n, x, y);
		p.plotArrayPar(n, x, y,3,2,12,"Точки");
		double x1[100],y1[100], y3[100];
		for (int i=0; i < 100; i++) {
			x1[i] = i/ 25.0;
			y1[i] = a1[0]+x1[i]*a1[1];
			y3[i] = a[0]+a[1]*x1[i]+a[2]*x1[i]*x1[i];
		}
		p.plotArray(100, x1, y1,y3);
		
		p.plot();
		return 0;
		
	}
	else cout << "Файл не найден";
}
